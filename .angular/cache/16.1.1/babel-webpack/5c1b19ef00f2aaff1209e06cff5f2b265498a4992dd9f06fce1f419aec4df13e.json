{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nconst _c0 = [\"chatContent\"];\nfunction ClassicDropChatComponent_div_0_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"img\", 18);\n    i0.ɵɵelementStart(2, \"div\", 19)(3, \"div\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 21);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const msg_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isUser(msg_r4) ? \"user\" : \"bot\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r3.isUser(msg_r4) ? (ctx_r3.activeUser == null ? null : ctx_r3.activeUser.image) || \"assets/images/faces/15.jpg\" : \"assets/images/bot-icon.png\", i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r3.isUser(msg_r4) ? \"user\" : \"bot\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", msg_r4.content, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(7, 5, msg_r4.sentDate, \"shortTime\"), \" \");\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"fullscreen\": a0\n  };\n};\nconst _c2 = function (a0, a1) {\n  return {\n    \"width\": a0,\n    \"height\": a1\n  };\n};\nfunction ClassicDropChatComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"p\", 5);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 6);\n    i0.ɵɵlistener(\"click\", function ClassicDropChatComponent_div_0_Template_p_click_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.bringBotOnline.emit());\n    });\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function ClassicDropChatComponent_div_0_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.toggleFullScreen());\n    });\n    i0.ɵɵelement(8, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 9)(10, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function ClassicDropChatComponent_div_0_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.toggleDropdown());\n    });\n    i0.ɵɵtext(11, \" X \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\", 11, 12);\n    i0.ɵɵtemplate(14, ClassicDropChatComponent_div_0_div_14_Template, 8, 8, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 14)(16, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function ClassicDropChatComponent_div_0_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.userMessage = $event);\n    })(\"keydown.enter\", function ClassicDropChatComponent_div_0_Template_input_keydown_enter_16_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.onEnterPressed($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ClassicDropChatComponent_div_0_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.sendMessage());\n    });\n    i0.ɵɵtext(18, \"Send\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx_r0.isFullScreen))(\"ngStyle\", i0.ɵɵpureFunction2(9, _c2, ctx_r0.botWidget.iconWidth + \"px\", ctx_r0.botWidget.iconHeight + \"px\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate((ctx_r0.activeUser == null ? null : ctx_r0.activeUser.name) || \"Unknown User\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.connectionStatus);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.messages);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.userMessage);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.userMessage.trim());\n  }\n}\nfunction ClassicDropChatComponent_div_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"\\uD83D\\uDCAC\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ClassicDropChatComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"img\", 24);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"src\", ctx_r13.botWidget.Iconurl, i0.ɵɵsanitizeUrl);\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"background\": a0\n  };\n};\nfunction ClassicDropChatComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵlistener(\"click\", function ClassicDropChatComponent_div_1_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r14.toggleChat());\n    });\n    i0.ɵɵtemplate(1, ClassicDropChatComponent_div_1_span_1_Template, 2, 0, \"span\", 23);\n    i0.ɵɵtemplate(2, ClassicDropChatComponent_div_1_div_2_Template, 2, 1, \"div\", 23);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(3, _c3, ctx_r1.botWidget.IconBG));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.botWidget.Iconurl);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.botWidget.Iconurl);\n  }\n}\nexport class ClassicDropChatComponent {\n  constructor() {\n    // Text input for new messages\n    this.userMessage = '';\n    this.isChatOpen = false;\n    this.chatBot = null;\n    // ✅ Inputs to match your existing chat system\n    this.messages = [];\n    this.activeUser = null;\n    this.connectionStatus = 'Offline';\n    // ✅ Outputs to handle UI events (optional)\n    this.sendMessageEvent = new EventEmitter();\n    this.userDetailsClicked = new EventEmitter();\n    this.bringBotOnline = new EventEmitter();\n    this.isFullScreen = false;\n    this.showDropdown = false;\n  }\n  toggleChat() {\n    this.isChatOpen = !this.isChatOpen;\n  }\n  ngOnChanges(changes) {\n    // this.botWidget.Iconurl=this.botIcon;\n  }\n  ngAfterViewChecked() {\n    this.scrollToBottom();\n  }\n  isUser(msg) {\n    return msg.sentByClient;\n  }\n  scrollToBottom() {\n    try {\n      this.chatContent.nativeElement.scrollTop = this.chatContent.nativeElement.scrollHeight;\n    } catch (err) {\n      console.error('Auto-scroll error:', err);\n    }\n  }\n  toggleFullScreen() {\n    this.isFullScreen = !this.isFullScreen;\n    // this.isChatOpen=!this.isChatOpen;\n    // const baseUrl = window.location.origin;\n    // const botName = this.botWidget.botName || 'default';\n    // const width   = this.botWidget.iconWidth || 600;\n    // const height  = this.botWidget.iconHeight || 600;\n    // const url = `${baseUrl}/chat/${botName}`;\n    // window.open(\n    //   url,\n    //   'chatbot',\n    //   `width=${width},height=${height},resizable=yes,scrollbars=yes`\n    // );\n  }\n\n  toggleDropdown() {\n    this.isChatOpen = false;\n    this.showDropdown = !this.showDropdown;\n  }\n  closeDropdown() {\n    this.showDropdown = false;\n  }\n  // Called when user presses Enter or clicks Send\n  sendMessage() {\n    const trimmed = this.userMessage.trim();\n    if (!trimmed) return;\n    this.sendMessageEvent.emit(trimmed);\n    this.userMessage = '';\n    if (this.connectionStatus === 'Offline') {\n      this.bringBotOnline.emit();\n    }\n  }\n  onEnterPressed(event) {\n    event.preventDefault();\n    this.sendMessage();\n  }\n  onUserDetailsClick() {\n    // this.userDetailsClicked.emit();\n    console.log(this.messages);\n  }\n  getTranscript() {\n    console.log('Fetching chat transcript...');\n    // Your logic here\n  }\n\n  onRating() {\n    console.log('Opening rating dialog...');\n    // Your logic here\n  }\n\n  openPopup() {\n    console.log('Opening popup...');\n    // Your logic here\n  }\n\n  end() {\n    console.log('Ending chat session...');\n    // Your logic here\n  }\n}\n\nClassicDropChatComponent.ɵfac = function ClassicDropChatComponent_Factory(t) {\n  return new (t || ClassicDropChatComponent)();\n};\nClassicDropChatComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ClassicDropChatComponent,\n  selectors: [[\"app-classic-drop-chat\"]],\n  viewQuery: function ClassicDropChatComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chatContent = _t.first);\n    }\n  },\n  inputs: {\n    chatBot: \"chatBot\",\n    botWidget: \"botWidget\",\n    messages: \"messages\",\n    activeUser: \"activeUser\",\n    connectionStatus: \"connectionStatus\"\n  },\n  outputs: {\n    sendMessageEvent: \"sendMessageEvent\",\n    userDetailsClicked: \"userDetailsClicked\",\n    bringBotOnline: \"bringBotOnline\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[\"class\", \"chat-container\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"class\", \"chat-launcher\", 3, \"ngStyle\", \"click\", 4, \"ngIf\"], [1, \"chat-container\", 3, \"ngClass\", \"ngStyle\"], [1, \"chat-header\", \"d-flex\", \"align-items-center\", \"border-bottom\", \"p-3\"], [1, \"flex-fill\"], [1, \"mb-0\", \"fw-bold\"], [1, \"mb-0\", \"text-muted\", 3, \"click\"], [\"title\", \"Popup\", 1, \"btn\", \"btn-outline-secondary\", \"me-2\", 3, \"click\"], [1, \"glyphicon\", \"glyphicon-fullscreen\"], [1, \"custom-dropdown\"], [1, \"dropdown-toggle-btn\", 3, \"click\"], [1, \"chat-content\"], [\"chatContent\", \"\"], [\"class\", \"message-wrapper\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [1, \"chat-input\"], [\"placeholder\", \"Type your message...\", 3, \"ngModel\", \"ngModelChange\", \"keydown.enter\"], [3, \"disabled\", \"click\"], [1, \"message-wrapper\", 3, \"ngClass\"], [\"alt\", \"avatar\", 1, \"avatar\", 3, \"src\"], [1, \"message-block\"], [1, \"message\", 3, \"ngClass\"], [1, \"timestamp\"], [1, \"chat-launcher\", 3, \"ngStyle\", \"click\"], [4, \"ngIf\"], [\"alt\", \"Bot\", 1, \"chat-icon-img\", 3, \"src\"]],\n  template: function ClassicDropChatComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ClassicDropChatComponent_div_0_Template, 19, 12, \"div\", 0);\n      i0.ɵɵtemplate(1, ClassicDropChatComponent_div_1_Template, 3, 5, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.isChatOpen);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isChatOpen);\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgStyle, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgModel, i1.DatePipe],\n  styles: [\"[_nghost-%COMP%] {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 100vh;\\n  background-color: #f3f3f3;\\n}\\n\\n.chat-launcher[_ngcontent-%COMP%] {\\n  position: fixed;\\n  bottom: 2vh;\\n  right: 2vw;\\n  width: clamp(50px, 6vw, 70px);\\n  height: clamp(50px, 6vw, 70px);\\n  background-color: #007bff;\\n  border-radius: 50%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  font-size: clamp(16px, 3vw, 24px);\\n  color: white;\\n  cursor: pointer;\\n  z-index: 1000;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\\n}\\n\\n.chat-icon-img[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 100%;\\n  object-fit: cover;\\n  border-radius: 50%;\\n}\\n\\n.chat-container[_ngcontent-%COMP%] {\\n  position: fixed;\\n  bottom: 12vh;\\n  right: 2vw;\\n  width: clamp(280px, 30vw, 400px);\\n  height: clamp(400px, 70vh, 600px);\\n  background-color: white;\\n  border-radius: 1rem;\\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  transition: all 0.3s ease;\\n  z-index: 9999;\\n}\\n\\n.chat-container.fullscreen[_ngcontent-%COMP%] {\\n  inset: 2vh 2vw;\\n  width: auto !important;\\n  height: auto !important;\\n  max-width: none !important;\\n  border-radius: 0 !important;\\n}\\n\\n.chat-header[_ngcontent-%COMP%] {\\n  padding: 1rem;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  background-color: #f8f9fa;\\n  border-bottom: 1px solid #ddd;\\n  gap: 1rem;\\n}\\n\\n.chat-content[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 1rem;\\n  overflow-y: auto;\\n  display: flex;\\n  flex-direction: column;\\n  gap: 0.75rem;\\n}\\n\\n.message-wrapper[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: flex-end;\\n}\\n\\n.message-wrapper.bot[_ngcontent-%COMP%] {\\n  justify-content: flex-start;\\n}\\n\\n.message-wrapper.user[_ngcontent-%COMP%] {\\n  justify-content: flex-end;\\n}\\n\\n.avatar[_ngcontent-%COMP%] {\\n  width: 32px;\\n  height: 32px;\\n  margin: 0 0.5rem;\\n  border-radius: 50%;\\n  object-fit: cover;\\n}\\n\\n.message-block[_ngcontent-%COMP%] {\\n  max-width: 75%;\\n  display: flex;\\n  flex-direction: column;\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  padding: 0.6rem 1rem;\\n  border-radius: 15px;\\n  line-height: 1.4;\\n  font-size: clamp(0.85rem, 1.8vw, 1rem);\\n  word-wrap: break-word;\\n}\\n\\n.message.user[_ngcontent-%COMP%] {\\n  background-color: #0084ff;\\n  color: white;\\n  border-top-right-radius: 0;\\n  align-self: flex-end;\\n}\\n\\n.message.bot[_ngcontent-%COMP%] {\\n  background-color: #e0e0e0;\\n  color: black;\\n  border-top-left-radius: 0;\\n  align-self: flex-start;\\n}\\n\\n.timestamp[_ngcontent-%COMP%] {\\n  font-size: 0.75rem;\\n  color: #888;\\n  margin-top: 0.25rem;\\n  white-space: nowrap;\\n}\\n\\n.chat-input[_ngcontent-%COMP%] {\\n  display: flex;\\n  padding: 1rem;\\n  border-top: 1px solid #ddd;\\n  background: #fff;\\n  gap: 0.5rem;\\n}\\n\\n.chat-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  flex: 1;\\n  padding: 0.6rem 1rem;\\n  font-size: 1rem;\\n  border: 1px solid #ccc;\\n  border-radius: 20px;\\n  outline: none;\\n}\\n\\n.chat-input[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  padding: 0.6rem 1.2rem;\\n  background-color: #0084ff;\\n  color: white;\\n  border: none;\\n  border-radius: 20px;\\n  font-size: 1rem;\\n  cursor: pointer;\\n}\\n\\n.chat-input[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover {\\n  background-color: #006fdd;\\n}\\n\\n.custom-dropdown[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.custom-dropdown[_ngcontent-%COMP%]   .dropdown-toggle-btn[_ngcontent-%COMP%] {\\n  background: transparent;\\n  border: none;\\n  font-size: 18px;\\n  cursor: pointer;\\n  color: #555;\\n  padding: 4px;\\n}\\n\\n.custom-dropdown[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%] {\\n  position: absolute;\\n  top: 100%;\\n  right: 0;\\n  background: white;\\n  border: 1px solid #ccc;\\n  border-radius: 6px;\\n  min-width: 160px;\\n  padding: 4px 0;\\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  list-style: none;\\n  margin: 5px 0 0 0;\\n  z-index: 9999;\\n}\\n\\n.custom-dropdown[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  padding: 10px 16px;\\n  cursor: pointer;\\n  white-space: nowrap;\\n  font-size: 14px;\\n  color: #333;\\n}\\n\\n.custom-dropdown[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover {\\n  background-color: #f0f0f0;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"]\n});","map":{"version":3,"names":["EventEmitter","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ctx_r3","isUser","msg_r4","ɵɵadvance","activeUser","image","ɵɵsanitizeUrl","ɵɵtextInterpolate1","content","ɵɵpipeBind2","sentDate","ɵɵlistener","ClassicDropChatComponent_div_0_Template_p_click_5_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","bringBotOnline","emit","ClassicDropChatComponent_div_0_Template_button_click_7_listener","ctx_r7","toggleFullScreen","ClassicDropChatComponent_div_0_Template_button_click_10_listener","ctx_r8","toggleDropdown","ɵɵtemplate","ClassicDropChatComponent_div_0_div_14_Template","ClassicDropChatComponent_div_0_Template_input_ngModelChange_16_listener","$event","ctx_r9","userMessage","ClassicDropChatComponent_div_0_Template_input_keydown_enter_16_listener","ctx_r10","onEnterPressed","ClassicDropChatComponent_div_0_Template_button_click_17_listener","ctx_r11","sendMessage","ɵɵpureFunction1","_c1","ctx_r0","isFullScreen","ɵɵpureFunction2","_c2","botWidget","iconWidth","iconHeight","ɵɵtextInterpolate","name","connectionStatus","messages","trim","ctx_r13","Iconurl","ClassicDropChatComponent_div_1_Template_div_click_0_listener","_r15","ctx_r14","toggleChat","ClassicDropChatComponent_div_1_span_1_Template","ClassicDropChatComponent_div_1_div_2_Template","_c3","ctx_r1","IconBG","ClassicDropChatComponent","constructor","isChatOpen","chatBot","sendMessageEvent","userDetailsClicked","showDropdown","ngOnChanges","changes","ngAfterViewChecked","scrollToBottom","msg","sentByClient","chatContent","nativeElement","scrollTop","scrollHeight","err","console","error","closeDropdown","trimmed","event","preventDefault","onUserDetailsClick","log","getTranscript","onRating","openPopup","end","selectors","viewQuery","ClassicDropChatComponent_Query","rf","ctx","ClassicDropChatComponent_div_0_Template","ClassicDropChatComponent_div_1_Template"],"sources":["C:\\Project\\git book\\chat-widgets\\src\\app\\botSkins\\classic-drop-chat\\classic-drop-chat.component.ts","C:\\Project\\git book\\chat-widgets\\src\\app\\botSkins\\classic-drop-chat\\classic-drop-chat.component.html"],"sourcesContent":["import { Component, Input, Output, EventEmitter, ViewChild, SimpleChanges, ElementRef } from '@angular/core';\r\nimport { BotConfig, LayoutSettings} from '../../Interface/interface'; \r\n\r\n@Component({\r\n  selector: 'app-classic-drop-chat',\r\n  templateUrl: './classic-drop-chat.component.html',\r\n  styleUrls: ['./classic-drop-chat.component.css']\r\n})\r\nexport class ClassicDropChatComponent {\r\n// Text input for new messages\r\n  userMessage: string = '';\r\n  isChatOpen: boolean = false;\r\n  toggleChat() {\r\n    this.isChatOpen = !this.isChatOpen;\r\n  }\r\n  @Input() chatBot: BotConfig = null as any;\r\n  @Input() botWidget!: LayoutSettings;\r\n\r\n  // Scroll reference\r\n  @ViewChild('chatContent') private chatContent!: ElementRef;\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    // this.botWidget.Iconurl=this.botIcon;\r\n  }\r\n\r\n  // ✅ Inputs to match your existing chat system\r\n  @Input() messages: {\r\n    id: number;\r\n    content: string;\r\n    sentDate: string;\r\n    sentByClient: boolean;\r\n    senderId: string | null;\r\n    receiverClientId: string | null;\r\n  }[] = [];\r\n  @Input() activeUser: { name?: string; image?: string; status?: string } | null = null;\r\n  @Input() connectionStatus: string = 'Offline';\r\n\r\n  // ✅ Outputs to handle UI events (optional)\r\n  @Output() sendMessageEvent = new EventEmitter<string>();\r\n  @Output() userDetailsClicked = new EventEmitter<void>();\r\n  @Output() bringBotOnline = new EventEmitter<void>();\r\n\r\n  ngAfterViewChecked(): void {\r\n    this.scrollToBottom();\r\n  }\r\n\r\n  isUser(msg: { sentByClient: boolean }): boolean {\r\n    return msg.sentByClient;\r\n  }\r\n\r\n\r\n\r\n  private scrollToBottom(): void {\r\n    try {\r\n      this.chatContent.nativeElement.scrollTop = this.chatContent.nativeElement.scrollHeight;\r\n    } catch (err) {\r\n      console.error('Auto-scroll error:', err);\r\n    }\r\n  }\r\n\r\n  isFullScreen: boolean = false;\r\n  showDropdown = false;\r\n\r\n  toggleFullScreen() {\r\n    this.isFullScreen=!this.isFullScreen;\r\n    // this.isChatOpen=!this.isChatOpen;\r\n    // const baseUrl = window.location.origin;\r\n    // const botName = this.botWidget.botName || 'default';\r\n    // const width   = this.botWidget.iconWidth || 600;\r\n    // const height  = this.botWidget.iconHeight || 600;\r\n\r\n    // const url = `${baseUrl}/chat/${botName}`;\r\n\r\n    // window.open(\r\n    //   url,\r\n    //   'chatbot',\r\n    //   `width=${width},height=${height},resizable=yes,scrollbars=yes`\r\n    // );\r\n\r\n  }\r\n\r\n\r\n  toggleDropdown(): void {\r\n    this.isChatOpen = false;\r\n    this.showDropdown = !this.showDropdown;\r\n  }\r\n\r\n  closeDropdown(): void {\r\n    this.showDropdown = false;\r\n  }\r\n\r\n\r\n\r\n  // Called when user presses Enter or clicks Send\r\n  sendMessage(): void {\r\n    const trimmed = this.userMessage.trim();\r\n    if (!trimmed) return;\r\n    this.sendMessageEvent.emit(trimmed);\r\n    this.userMessage = '';\r\n    if (this.connectionStatus === 'Offline') {\r\n      this.bringBotOnline.emit()\r\n    }\r\n  }\r\n\r\n  onEnterPressed(event: any): void {\r\n    event.preventDefault();\r\n    this.sendMessage();\r\n  }\r\n\r\n  onUserDetailsClick(): void {\r\n    // this.userDetailsClicked.emit();\r\n    console.log(this.messages)\r\n  }\r\n\r\n  getTranscript(): void {\r\n    console.log('Fetching chat transcript...');\r\n    // Your logic here\r\n  }\r\n\r\n  onRating(): void {\r\n    console.log('Opening rating dialog...');\r\n    // Your logic here\r\n  }\r\n\r\n  openPopup(): void {\r\n    console.log('Opening popup...');\r\n    // Your logic here\r\n  }\r\n\r\n  end(): void {\r\n    console.log('Ending chat session...');\r\n    // Your logic here\r\n  }\r\n\r\n}\r\n","<!-- Chat Container -->\r\n<div class=\"chat-container\" [ngClass]=\"{ 'fullscreen': isFullScreen }\" [ngStyle]=\"{\r\n  'width': botWidget.iconWidth + 'px',\r\n  'height': botWidget.iconHeight + 'px'\r\n}\" *ngIf=\"isChatOpen\">\r\n  <!-- Header -->\r\n  <div class=\"chat-header d-flex align-items-center border-bottom p-3\">\r\n    <div class=\"flex-fill\">\r\n      <p class=\"mb-0 fw-bold\">{{ activeUser?.name || 'Unknown User' }}</p>\r\n      <p class=\"mb-0 text-muted\" (click)=\"bringBotOnline.emit()\">{{ connectionStatus }}</p>\r\n    </div>\r\n    <!-- Fullscreen Toggle -->\r\n    <button class=\"btn btn-outline-secondary me-2\" (click)=\"toggleFullScreen()\" title=\"Popup\">\r\n      <span class=\"glyphicon glyphicon-fullscreen\"></span>\r\n    </button>\r\n    <div class=\"custom-dropdown\">\r\n      <button class=\"dropdown-toggle-btn\" (click)=\"toggleDropdown()\"> X </button>\r\n    </div>\r\n  </div>\r\n  <!-- <div *ngIf=\"showDropdown\">\r\n    <ul>\r\n      <li (click)=\"getTranscript(); closeDropdown()\">Chat Transcript</li>\r\n      <li (click)=\"onRating(); closeDropdown()\">Rating</li>\r\n      <li (click)=\"openPopup(); closeDropdown()\">Popup</li>\r\n      <li (click)=\"end(); closeDropdown()\">End Chat</li>\r\n    </ul>\r\n  </div> -->\r\n  <!-- Chat Messages -->\r\n  <div class=\"chat-content\" #chatContent>\r\n    <div *ngFor=\"let msg of messages\" class=\"message-wrapper\" [ngClass]=\"isUser(msg) ? 'user' : 'bot'\">\r\n      <img class=\"avatar\"\r\n        [src]=\"isUser(msg) ? activeUser?.image || 'assets/images/faces/15.jpg' : 'assets/images/bot-icon.png'\"\r\n        alt=\"avatar\" />\r\n      <div class=\"message-block\">\r\n        <div class=\"message\" [ngClass]=\"isUser(msg) ? 'user' : 'bot'\">\r\n          {{ msg.content }}\r\n        </div>\r\n        <div class=\"timestamp\">\r\n          {{ msg.sentDate | date: 'shortTime' }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <!-- Chat Input -->\r\n  <div class=\"chat-input\">\r\n    <input [(ngModel)]=\"userMessage\" (keydown.enter)=\"onEnterPressed($event)\" placeholder=\"Type your message...\" />\r\n    <button (click)=\"sendMessage()\" [disabled]=\"!userMessage.trim()\">Send</button>\r\n  </div>\r\n</div>\r\n\r\n<!-- Chat Launcher Button -->\r\n<div class=\"chat-launcher\" *ngIf=\"!isChatOpen\" (click)=\"toggleChat()\" [ngStyle]=\"{ 'background': botWidget.IconBG}\">\r\n\r\n  <span *ngIf=\"!botWidget.Iconurl\">💬</span>\r\n <div *ngIf=\"botWidget.Iconurl\">\r\n    <img [src]=\"botWidget.Iconurl\" alt=\"Bot\" class=\"chat-icon-img\">\r\n  </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}